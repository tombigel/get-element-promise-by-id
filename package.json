{
  "name": "get-element-promise-by-id",
  "version": "0.1.1",
  "description": "An implementation of getElementById that returns a promise that waits to resolve when the element will be added to the DOM. Using mutation observer and cancelable with an abort signal or a timeout",
  "type": "module",
  "main": "dist/index.cjs",
  "module": "dist/index.js",
  "types": "dist/types/index.d.ts",
  "exports": {
    ".": {
      "types": "./dist/types/index.d.ts",
      "import": "./dist/index.js",
      "require": "./dist/index.cjs"
    }
  },
  "scripts": {
    "dev": "vite",
    "lint": "npx eslint ./src",
    "clean": "rimraf dist coverage build",
    "build:lib": "vite build --config vite.lib.config.ts",
    "build:demo": "vite build",
    "build": "npm run test && npm run lint && npm run build:lib",
    "test": "vitest run",
    "test:watch": "vitest",
    "coverage": "vitest run --coverage",
    "predeploy": "npm run build:demo",
    "deploy": "gh-pages -d build",
    "release": "standard-version"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/tombigel/get-element-promise-by-id.git"
  },
  "keywords": [
    "getelementbyid",
    "promise",
    "abort",
    "signal",
    "mutation",
    "observer",
    "async"
  ],
  "author": "Tom Bigelajzen <getelementpromise@tombigel.com>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/tombigel/get-element-promise-by-id/issues"
  },
  "homepage": "https://tombigel.github.io/get-element-promise-by-id/",
  "devDependencies": {
    "@eslint/js": "^9.2.0",
    "@types/node": "^20.12.11",
    "@vitest/coverage-v8": "^3.2.1",
    "@vitest/ui": "^3.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-vitest": "^0.5.4",
    "gh-pages": "^6.3.0",
    "globals": "^15.2.0",
    "jsdom": "^26.1.0",
    "rimraf": "^6.0.1",
    "standard-version": "^9.5.0",
    "typescript": "^5.4.5",
    "typescript-eslint": "^7.8.0",
    "vite": "^6.3.5",
    "vite-plugin-dts": "^4.5.4",
    "vitest": "^3.2.1"
  },
  "standard-version": {
    "scripts": {
      "postbump": "npm run build",
      "postchangelog": "git add CHANGELOG.md",
      "postcommit": "git push --follow-tags origin main && npm publish"
    }
  }
}
